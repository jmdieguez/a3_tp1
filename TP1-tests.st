TestCase subclass: #AlgoVidTest	instanceVariableNames: 'algovid'	classVariableNames: ''	package: 'tp1-tests'!!AlgoVidTest methodsFor: 'tests' stamp: 'MANU 5/16/2021 21:22'!test04UnVacunadxConCovidPositivoNoPuedeCircular	algovid nuevaPersona: 'Joaquin'.   algovid estaVacunadx: 'Joaquin'.	algovid agregarSintoma: 'Tos' a: 'Joaquin'.	algovid agregarSintoma: 'Fiebre' a: 'Joaquin'.	algovid agregarSintoma: 'Dolor de cabeza' a: 'Joaquin'.  	self deny: (algovid puedeCircular: 'Joaquin').	self assert: (algovid diagnosticoDe: 'Joaquin') equals: 'Positivo'.! !!AlgoVidTest methodsFor: 'tests' stamp: 'MANU 5/16/2021 21:38'!test23UnColegioPorDefectoTieneClasesPresenciales	algovid nuevoColegio: 'Colegio 1'.	self assert: (algovid clasesPresencialesEn: 'Colegio 1').! !!AlgoVidTest methodsFor: 'tests' stamp: 'MANU 5/16/2021 21:35'!test21UnaBurbujaConCasosSospechososNoEstaPinchada	algovid nuevaBurbuja: 'Burbuja 1'.	algovid nuevaPersona: 'Jorge'.	algovid agregarA: 'Jorge' aLaBurbuja: 'Burbuja 1'.	algovid agregarSintoma: 'Tos' a: 'Jorge'.	self deny: (algovid burbujaPinchada: 'Burbuja 1').! !!AlgoVidTest methodsFor: 'tests' stamp: 'MANU 5/16/2021 21:12'!test08UnaPersonaDeRiesgoNoPuedeCircular	algovid nuevaPersona: 'Joaquin'.   algovid esPersonaDeRiesgo: 'Joaquin'.  	self deny: (algovid puedeCircular: 'Joaquin').	self assert: (algovid diagnosticoDe: 'Joaquin') equals: 'Negativo'.! !!AlgoVidTest methodsFor: 'tests' stamp: 'MANU 5/16/2021 21:29'!test18UnaPersonaDeRiesgoConContactoEstrechoSospechosoNoPuedeCircular	algovid nuevaPersona: 'Joaquin'.   algovid esPersonaDeRiesgo: 'Joaquin'.	algovid nuevaPersona: 'Marcos'.	algovid agregarSintoma: 'Tos' a: 'Marcos'.	algovid contactoEstrechoEntre: 'Marcos' y: 'Joaquin'.   		self deny: (algovid puedeCircular: 'Joaquin').	self assert: (algovid diagnosticoDe: 'Joaquin') equals: 'Negativo'.	self deny: (algovid puedeCircular: 'Marcos').	self assert: (algovid diagnosticoDe: 'Marcos') equals: 'Sospechoso'.! !!AlgoVidTest methodsFor: 'tests' stamp: 'MANU 5/16/2021 21:15'!test10UnaPersonaDeRiesgoConCovidPositivoNoPuedeCircular	algovid nuevaPersona: 'Joaquin'.   algovid esPersonaDeRiesgo: 'Joaquin'.	algovid agregarSintoma: 'Tos' a: 'Joaquin'.	algovid agregarSintoma: 'Fiebre' a: 'Joaquin'.	algovid agregarSintoma: 'Dolor de cabeza' a: 'Joaquin'.  	self deny: (algovid puedeCircular: 'Joaquin').	self assert: (algovid diagnosticoDe: 'Joaquin') equals: 'Positivo'.! !!AlgoVidTest methodsFor: 'tests' stamp: 'MANU 5/16/2021 21:36'!test22UnaBurbujaConCasosPositivosEstaPinchada	algovid nuevaBurbuja: 'Burbuja 1'.		algovid nuevaPersona: 'Matias'.	algovid agregarA: 'Matias' aLaBurbuja: 'Burbuja 1'.	algovid nuevaPersona: 'Juan'.	algovid agregarA: 'Juan' aLaBurbuja: 'Burbuja 1'.	algovid nuevaPersona: 'Jorge'.	algovid agregarA: 'Jorge' aLaBurbuja: 'Burbuja 1'.		algovid agregarSintoma: 'Tos' a: 'Jorge'.	algovid agregarSintoma: 'Mocos' a: 'Jorge'.	algovid agregarSintoma: 'Vomito' a: 'Jorge'.	self assert: (algovid burbujaPinchada: 'Burbuja 1').! !!AlgoVidTest methodsFor: 'tests' stamp: 'MANU 5/16/2021 21:30'!test19UnaPersonaDeRiesgoConContactoEstrechoPositivoNoPuedeCircular	algovid nuevaPersona: 'Joaquin'.   algovid esPersonaDeRiesgo: 'Joaquin'.	algovid nuevaPersona: 'Marcos'.	algovid agregarSintoma: 'Tos' a: 'Marcos'.	algovid agregarSintoma: 'Fiebre' a: 'Marcos'.	algovid agregarSintoma: 'Dolor de cabeza' a: 'Marcos'.	algovid contactoEstrechoEntre: 'Marcos' y: 'Joaquin'.   		self deny: (algovid puedeCircular: 'Joaquin').	self assert: (algovid diagnosticoDe: 'Joaquin') equals: 'Negativo'.	self deny: (algovid puedeCircular: 'Marcos').	self assert: (algovid diagnosticoDe: 'Marcos') equals: 'Positivo'.! !!AlgoVidTest methodsFor: 'tests' stamp: 'MANU 5/16/2021 21:24'!test15UnEsencialYDeRiesgoNoPuedeCircular	algovid nuevaPersona: 'Joaquin'.   algovid esPersonaDeRiesgo: 'Joaquin'.   algovid esPersonalEsencial: 'Joaquin'.  	self deny: (algovid puedeCircular: 'Joaquin').	self assert: (algovid diagnosticoDe: 'Joaquin') equals: 'Negativo'.! !!AlgoVidTest methodsFor: 'tests' stamp: 'MANU 5/16/2021 21:20'!test13UnVacunadxConContactoEstrechoSospechosoNoPuedeCircular	algovid nuevaPersona: 'Joaquin'.   algovid estaVacunadx: 'Joaquin'.	algovid nuevaPersona: 'Marcos'.	algovid agregarSintoma: 'Tos' a: 'Marcos'.	algovid contactoEstrechoEntre: 'Marcos' y: 'Joaquin'.   		self deny: (algovid puedeCircular: 'Joaquin').	self assert: (algovid diagnosticoDe: 'Joaquin') equals: 'Negativo'.	self deny: (algovid puedeCircular: 'Marcos').	self assert: (algovid diagnosticoDe: 'Marcos') equals: 'Sospechoso'.! !!AlgoVidTest methodsFor: 'tests' stamp: 'MANU 5/16/2021 21:22'!test07UnEsencialConCovidPositivoNoPuedeCircular	algovid nuevaPersona: 'Joaquin'.   algovid esPersonalEsencial: 'Joaquin'.	algovid agregarSintoma: 'Tos' a: 'Joaquin'.	algovid agregarSintoma: 'Fiebre' a: 'Joaquin'.	algovid agregarSintoma: 'Dolor de cabeza' a: 'Joaquin'.  	self deny: (algovid puedeCircular: 'Joaquin').	self assert: (algovid diagnosticoDe: 'Joaquin') equals: 'Positivo'.! !!AlgoVidTest methodsFor: 'tests' stamp: 'MANU 5/16/2021 21:25'!test17UnEsencialConContactoEstrechoPositivoNoPuedeCircular	algovid nuevaPersona: 'Joaquin'.   algovid esPersonalEsencial: 'Joaquin'.	algovid nuevaPersona: 'Marcos'.	algovid agregarSintoma: 'Tos' a: 'Marcos'.	algovid agregarSintoma: 'Fiebre' a: 'Marcos'.	algovid agregarSintoma: 'Dolor de cabeza' a: 'Marcos'.	algovid contactoEstrechoEntre: 'Marcos' y: 'Joaquin'.   		self deny: (algovid puedeCircular: 'Joaquin').	self assert: (algovid diagnosticoDe: 'Joaquin') equals: 'Negativo'.	self deny: (algovid puedeCircular: 'Marcos').	self assert: (algovid diagnosticoDe: 'Marcos') equals: 'Positivo'.! !!AlgoVidTest methodsFor: 'tests' stamp: 'MANU 5/16/2021 21:21'!test03UnVacunadxConCovidSospechosoNoPuedeCircular	algovid nuevaPersona: 'Joaquin'.   algovid estaVacunadx: 'Joaquin'.	algovid agregarSintoma: 'Tos' a: 'Joaquin'.  	self deny: (algovid puedeCircular: 'Joaquin').	self assert: (algovid diagnosticoDe: 'Joaquin') equals: 'Sospechoso'.! !!AlgoVidTest methodsFor: 'tests' stamp: 'MANU 5/16/2021 21:33'!test20UnaBurbujaPorDefectoNoEstaPinchada	algovid nuevaBurbuja: 'Burbuja 1'.		self deny: (algovid burbujaPinchada: 'Burbuja 1').! !!AlgoVidTest methodsFor: 'tests' stamp: 'MANU 5/16/2021 21:15'!test09UnaPersonaDeRiesgoConCovidSospechosoNoPuedeCircular	algovid nuevaPersona: 'Joaquin'.   algovid esPersonaDeRiesgo: 'Joaquin'.	algovid agregarSintoma: 'Tos' a: 'Joaquin'.  	self deny: (algovid puedeCircular: 'Joaquin').	self assert: (algovid diagnosticoDe: 'Joaquin') equals: 'Sospechoso'.! !!AlgoVidTest methodsFor: 'tests' stamp: 'MANU 5/16/2021 21:21'!test14UnVacunadxConContactoEstrechoPositivoNoPuedeCircular	algovid nuevaPersona: 'Joaquin'.   algovid estaVacunadx: 'Joaquin'.	algovid nuevaPersona: 'Marcos'.	algovid agregarSintoma: 'Tos' a: 'Marcos'.	algovid agregarSintoma: 'Fiebre' a: 'Marcos'.	algovid agregarSintoma: 'Dolor de cabeza' a: 'Marcos'.	algovid contactoEstrechoEntre: 'Marcos' y: 'Joaquin'.   		self deny: (algovid puedeCircular: 'Joaquin').	self assert: (algovid diagnosticoDe: 'Joaquin') equals: 'Negativo'.	self deny: (algovid puedeCircular: 'Marcos').	self assert: (algovid diagnosticoDe: 'Marcos') equals: 'Positivo'.! !!AlgoVidTest methodsFor: 'tests' stamp: 'MANU 5/16/2021 21:21'!test02UnVacunadxPuedeCircular	algovid nuevaPersona: 'Joaquin'.   algovid estaVacunadx: 'Joaquin'.  	self assert: (algovid puedeCircular: 'Joaquin').	self assert: (algovid diagnosticoDe: 'Joaquin') equals: 'Negativo'.! !!AlgoVidTest methodsFor: 'tests' stamp: 'MANU 5/16/2021 21:21'!test11UnVacunadxYEsencialPuedeCircular	algovid nuevaPersona: 'Joaquin'.   algovid esPersonalEsencial: 'Joaquin'.   algovid estaVacunadx: 'Joaquin'.  	self assert: (algovid puedeCircular: 'Joaquin').	self assert: (algovid diagnosticoDe: 'Joaquin') equals: 'Negativo'.! !!AlgoVidTest methodsFor: 'tests' stamp: 'MANU 5/16/2021 22:33'!test01UnaPersonaPorDefectoNoPuedeCircular  algovid nuevaPersona: 'Joaquin'.    self deny: (algovid puedeCircular: 'Joaquin').! !!AlgoVidTest methodsFor: 'tests' stamp: 'MANU 5/16/2021 21:43'!test24SiMenosDel40PorcientoDeLasBurbujasEstanPinchadasEntoncesLasClasesSonPresenciales  algovid nuevaPersona: 'Thiago'.  algovid nuevaPersona: 'Pablo'.   algovid nuevaBurbuja: 'Ayudantes Algo3'.  algovid agregarA: 'Thiago' aLaBurbuja: 'Ayudantes Algo3'.  algovid agregarA: 'Pablo' aLaBurbuja: 'Ayudantes Algo3'.  algovid nuevaPersona: 'Martín'.  algovid nuevaPersona: 'Cami'.  algovid nuevaBurbuja: 'Ayudantes Algo2'.  algovid agregarA: 'Martín' aLaBurbuja: 'Ayudantes Algo2'.  algovid agregarA: 'Cami' aLaBurbuja: 'Ayudantes Algo2'.  algovid nuevaPersona: 'Diego'.  algovid nuevaPersona: 'Valen'.  algovid nuevaBurbuja: 'Ayudantes Algo1'.  algovid agregarA: 'Diego' aLaBurbuja: 'Ayudantes Algo1'.  algovid agregarA: 'Valen' aLaBurbuja: 'Ayudantes Algo1'.  algovid nuevoColegio: 'UBA'.  algovid agregarA: 'Ayudantes Algo1' alColegio: 'UBA'.  algovid agregarA: 'Ayudantes Algo2' alColegio: 'UBA'.  algovid agregarA: 'Ayudantes Algo3' alColegio: 'UBA'.  algovid agregarSintoma: 'Fiebre' a: 'Diego'.  algovid agregarSintoma: 'Dolor de cabeza' a: 'Diego'.  algovid agregarSintoma: 'Tos' a: 'Diego'.  self assert: (algovid diagnosticoDe: 'Diego') equals: 'Positivo'.   self assert: (algovid burbujaPinchada: 'Ayudantes Algo1').   self assert: (algovid clasesPresencialesEn: 'UBA').! !!AlgoVidTest methodsFor: 'tests' stamp: 'MANU 5/16/2021 21:22'!test05UnEsencialPuedeCircular	algovid nuevaPersona: 'Joaquin'.   algovid esPersonalEsencial: 'Joaquin'.  	self assert: (algovid puedeCircular: 'Joaquin').	self assert: (algovid diagnosticoDe: 'Joaquin') equals: 'Negativo'.! !!AlgoVidTest methodsFor: 'tests' stamp: 'MANU 5/16/2021 21:44'!test25SiMasDel40PorcientoDeLasBurbujasEstanPinchadasEntoncesLasClasesNoSonPresenciales  algovid nuevaPersona: 'Thiago'.  algovid nuevaPersona: 'Pablo'.   algovid nuevaBurbuja: 'Ayudantes Algo3'.  algovid agregarA: 'Thiago' aLaBurbuja: 'Ayudantes Algo3'.  algovid agregarA: 'Pablo' aLaBurbuja: 'Ayudantes Algo3'.  algovid nuevaPersona: 'Martín'.  algovid nuevaPersona: 'Cami'.  algovid nuevaBurbuja: 'Ayudantes Algo2'.  algovid agregarA: 'Martín' aLaBurbuja: 'Ayudantes Algo2'.  algovid agregarA: 'Cami' aLaBurbuja: 'Ayudantes Algo2'.  algovid nuevaPersona: 'Diego'.  algovid nuevaPersona: 'Valen'.  algovid nuevaBurbuja: 'Ayudantes Algo1'.  algovid agregarA: 'Diego' aLaBurbuja: 'Ayudantes Algo1'.  algovid agregarA: 'Valen' aLaBurbuja: 'Ayudantes Algo1'.  algovid nuevoColegio: 'UBA'.  algovid agregarA: 'Ayudantes Algo1' alColegio: 'UBA'.  algovid agregarA: 'Ayudantes Algo2' alColegio: 'UBA'.  algovid agregarA: 'Ayudantes Algo3' alColegio: 'UBA'.  algovid agregarSintoma: 'Fiebre' a: 'Diego'.  algovid agregarSintoma: 'Dolor de cabeza' a: 'Diego'.  algovid agregarSintoma: 'Tos' a: 'Diego'.  algovid agregarSintoma: 'Fiebre' a: 'Cami'.  algovid agregarSintoma: 'Dolor de cabeza' a: 'Cami'.  algovid agregarSintoma: 'Tos' a: 'Cami'.  self assert: (algovid diagnosticoDe: 'Diego') equals: 'Positivo'.   self assert: (algovid burbujaPinchada: 'Ayudantes Algo1').   self assert: (algovid diagnosticoDe: 'Cami') equals: 'Positivo'.   self assert: (algovid burbujaPinchada: 'Ayudantes Algo2').   self deny: (algovid clasesPresencialesEn: 'UBA').! !!AlgoVidTest methodsFor: 'tests' stamp: 'MANU 5/16/2021 21:21'!test12UnVacunadxYDeRiesgoNoPuedeCircular	algovid nuevaPersona: 'Joaquin'.   algovid esPersonaDeRiesgo: 'Joaquin'.   algovid estaVacunadx: 'Joaquin'.  	self deny: (algovid puedeCircular: 'Joaquin').	self assert: (algovid diagnosticoDe: 'Joaquin') equals: 'Negativo'.! !!AlgoVidTest methodsFor: 'tests' stamp: 'MANU 5/16/2021 21:22'!test06UnEsencialConCovidSospechosoNoPuedeCircular	algovid nuevaPersona: 'Joaquin'.   algovid esPersonalEsencial: 'Joaquin'.	algovid agregarSintoma: 'Tos' a: 'Joaquin'.  	self deny: (algovid puedeCircular: 'Joaquin').	self assert: (algovid diagnosticoDe: 'Joaquin') equals: 'Sospechoso'.! !!AlgoVidTest methodsFor: 'tests' stamp: 'MANU 5/16/2021 21:25'!test16UnEsencialConContactoEstrechoSospechosoNoPuedeCircular	algovid nuevaPersona: 'Joaquin'.   algovid esPersonalEsencial: 'Joaquin'.	algovid nuevaPersona: 'Marcos'.	algovid agregarSintoma: 'Tos' a: 'Marcos'.	algovid contactoEstrechoEntre: 'Marcos' y: 'Joaquin'.   		self deny: (algovid puedeCircular: 'Joaquin').	self assert: (algovid diagnosticoDe: 'Joaquin') equals: 'Negativo'.	self deny: (algovid puedeCircular: 'Marcos').	self assert: (algovid diagnosticoDe: 'Marcos') equals: 'Sospechoso'.! !!AlgoVidTest methodsFor: 'running' stamp: 'MANU 5/16/2021 18:40'!setUp	algovid := AlgoVid new. "Aislamiento estricto por defecto"! !TestCase subclass: #BurbujaTest	instanceVariableNames: 'burbuja'	classVariableNames: ''	package: 'tp1-tests'!!BurbujaTest methodsFor: 'running' stamp: 'MANU 5/17/2021 15:45'!setUp	burbuja := Burbuja new.! !!BurbujaTest methodsFor: 'tests' stamp: 'MANU 5/17/2021 15:52'!test03UnaBurbujaConCasoPositivoEstaPinchada	| unaPersona |	unaPersona := Persona new.		burbuja agregarPersona: unaPersona.		self deny: (burbuja estaPinchada).		unaPersona agregarSintoma: 'Tos'.	unaPersona agregarSintoma: 'Fiebre'.	unaPersona agregarSintoma: 'Dolor de cabeza'.		self assert: (burbuja estaPinchada).! !!BurbujaTest methodsFor: 'tests' stamp: 'MANU 5/17/2021 15:45'!test01PorDefectoUnaBurbujaNoEstaPinchada	self deny: (burbuja estaPinchada).! !!BurbujaTest methodsFor: 'tests' stamp: 'MANU 5/17/2021 15:52'!test02UnaBurbujaConCasoSospechosoNoEstaPinchada	| unaPersona |	unaPersona := Persona new.		burbuja agregarPersona: unaPersona.		self deny: (burbuja estaPinchada).		unaPersona agregarSintoma: 'Tos'.	unaPersona agregarSintoma: 'Fiebre'.		self deny: (burbuja estaPinchada).! !TestCase subclass: #ColegioTest	instanceVariableNames: 'colegio'	classVariableNames: ''	package: 'tp1-tests'!!ColegioTest methodsFor: 'tests' stamp: 'MANU 5/17/2021 16:04'!test02UnColegioConMenosDel40PorCientoDeBurbujasPinchadasTieneClasesPresenciales		| unaBurbuja otraBurbuja unaPersona otraPersona |	unaPersona := Persona new.	otraPersona := Persona new.	unaBurbuja := Burbuja new.	otraBurbuja := Burbuja new.	unaBurbuja agregarPersona: unaPersona.	otraBurbuja agregarPersona: otraPersona.		colegio agregarBurbuja: unaBurbuja.	colegio agregarBurbuja: otraBurbuja.		self deny: (unaBurbuja estaPinchada).	self deny: (otraBurbuja estaPinchada).		unaPersona agregarSintoma: 'Tos'.	unaPersona agregarSintoma: 'Fiebre'.		self assert: (colegio presencialidad).! !!ColegioTest methodsFor: 'tests' stamp: 'MANU 5/17/2021 15:55'!test01PorDefectoUnColegioTieneClasesPresenciales	self assert: (colegio presencialidad).! !!ColegioTest methodsFor: 'tests' stamp: 'MANU 5/17/2021 16:03'!test03UnColegioConMasDel40PorCientoDeBurbujasPinchadasNoTieneClasesPresenciales		| unaBurbuja otraBurbuja unaPersona otraPersona |	unaPersona := Persona new.	otraPersona := Persona new.	unaBurbuja := Burbuja new.	otraBurbuja := Burbuja new.	unaBurbuja agregarPersona: unaPersona.	otraBurbuja agregarPersona: otraPersona.		colegio agregarBurbuja: unaBurbuja.	colegio agregarBurbuja: otraBurbuja.		self deny: (unaBurbuja estaPinchada).	self deny: (otraBurbuja estaPinchada).		unaPersona agregarSintoma: 'Tos'.	unaPersona agregarSintoma: 'Fiebre'.	unaPersona agregarSintoma: 'Dolor de cabeza'.		self assert: (unaBurbuja estaPinchada).	self deny: (otraBurbuja estaPinchada).	self deny: (colegio presencialidad).! !!ColegioTest methodsFor: 'running' stamp: 'MANU 5/17/2021 15:54'!setUp 	colegio := Colegio new.! !TestCase subclass: #CondicionSocialTest	instanceVariableNames: 'habilitado inhabilitado'	classVariableNames: ''	package: 'tp1-tests'!!CondicionSocialTest methodsFor: 'tests' stamp: 'manu 6/17/2021 17:34'!test01ValidarHabilitadoDevuelveTrue	self assert: (habilitado validar).! !!CondicionSocialTest methodsFor: 'tests' stamp: 'manu 6/17/2021 17:34'!test02ValidarInhabilitadoDevuelveFalse	self deny: (inhabilitado validar).! !!CondicionSocialTest methodsFor: 'running' stamp: 'manu 6/17/2021 17:33'!setUp	habilitado := Habilitado new.	inhabilitado := Inhabilitado new.! !TestCase subclass: #DiagnosticoTest	instanceVariableNames: 'diagnostico sintomas'	classVariableNames: ''	package: 'tp1-tests'!!DiagnosticoTest methodsFor: 'tests' stamp: 'MANU 5/17/2021 16:12'!test04UnDiagnosticoCon3SintomasNoHabitualesEsSospechoso	sintomas add: 'Dolor de cabeza'.	sintomas add: 'Mocos'.	sintomas add: 'Fatiga'.	diagnostico setSintomas: sintomas.	self assert: (diagnostico estadoCovid) equals: 'Sospechoso'.! !!DiagnosticoTest methodsFor: 'tests' stamp: 'MANU 5/17/2021 16:11'!test02UnDiagnosticoCon1SintomaEsSospechoso	sintomas add: 'Tos'.	diagnostico setSintomas: sintomas.	self assert: (diagnostico estadoCovid) equals: 'Sospechoso'.! !!DiagnosticoTest methodsFor: 'tests' stamp: 'MANU 5/17/2021 16:11'!test03UnDiagnosticoCon2SintomaEsSospechoso	sintomas add: 'Tos'.	sintomas add: 'Fiebre'.	diagnostico setSintomas: sintomas.	self assert: (diagnostico estadoCovid) equals: 'Sospechoso'.! !!DiagnosticoTest methodsFor: 'tests' stamp: 'MANU 5/17/2021 16:13'!test04UnDiagnosticoCon3SintomasYUnoOMasHabitualesEsPositivo	sintomas add: 'Dolor de cabeza'.	sintomas add: 'Mocos'.	sintomas add: 'Fiebre'.	diagnostico setSintomas: sintomas.	self assert: (diagnostico estadoCovid) equals: 'Positivo'.! !!DiagnosticoTest methodsFor: 'tests' stamp: 'MANU 5/17/2021 16:13'!test04UnDiagnosticoCon4SintomasEsPositivo	sintomas add: 'Dolor de cabeza'.	sintomas add: 'Mocos'.	sintomas add: 'Fatiga'.	sintomas add: 'Perdida de vision'.		diagnostico setSintomas: sintomas.	self assert: (diagnostico estadoCovid) equals: 'Positivo'.! !!DiagnosticoTest methodsFor: 'tests' stamp: 'MANU 5/17/2021 16:08'!test01PorDefectoUnDiagnosticoEsNegativo	self assert: (diagnostico estadoCovid) equals: 'Negativo'.! !!DiagnosticoTest methodsFor: 'running' stamp: 'MANU 5/17/2021 16:10'!setUp	diagnostico := Diagnostico new.	sintomas := OrderedCollection new.! !TestCase subclass: #PersonaTest	instanceVariableNames: 'persona'	classVariableNames: ''	package: 'tp1-tests'!!PersonaTest methodsFor: 'tests' stamp: 'manu 5/20/2021 19:35'!test08UnaPersonaConContactosEstrechosNoPuedeCircular	"Notese que no se cuestiona el estado de Covid de la persona con la que se tiene contacto estrecho 	puesto que eso es responsabilidad de las clases que delega AlgoVid y supera a la clase Persona. Este 	comportamiento esta testeado dentro de AlgoVidTest"	| otraPersona |	otraPersona := Persona new.	persona agregarContacto: otraPersona.		self assert: (persona getContactos isNotEmpty).	self deny: (persona puedeCircular).! !!PersonaTest methodsFor: 'tests' stamp: 'mau 6/21/2021 13:50'!test10SiEstaEnUnaBurbujaNoPinchadaPuedeCircular	| unaBurbuja unaPersona |	persona esVacunadx.		unaBurbuja := Burbuja new.	unaPersona := Persona new.		unaBurbuja agregarPersona: unaPersona.	unaBurbuja agregarPersona: persona. 	persona agregarBurbuja: unaBurbuja.	unaPersona agregarBurbuja: unaBurbuja.	self deny: (unaBurbuja estaPinchada).	self assert: (persona puedeCircular).		unaPersona agregarSintoma: 'Tos'.	unaPersona agregarSintoma: 'Fiebre'.		self deny: (unaBurbuja estaPinchada).	self assert: (persona puedeCircular).! !!PersonaTest methodsFor: 'tests' stamp: 'manu 6/17/2021 17:06'!test01PorDefectoNoPuedeCircular	self deny: (persona puedeCircular).! !!PersonaTest methodsFor: 'tests' stamp: 'MANU 5/17/2021 15:12'!test06VacunadxDeRiesgoNoPuedeCircular	persona esVacunadx.	persona esRiesgo.	self deny: (persona puedeCircular)! !!PersonaTest methodsFor: 'tests' stamp: 'MANU 5/17/2021 15:12'!test05VacunadxEsencialPuedeCircular	persona esVacunadx.	persona esEsencial.	self assert: (persona puedeCircular)! !!PersonaTest methodsFor: 'tests' stamp: 'mau 6/21/2021 13:50'!test11SiEstaEnUnaBurbujaPinchadaNoPuedeCircular	| unaBurbuja unaPersona |	persona esVacunadx.		unaBurbuja := Burbuja new.	unaPersona := Persona new.		unaBurbuja agregarPersona: unaPersona.	unaBurbuja agregarPersona: persona. 	persona agregarBurbuja: unaBurbuja.	unaPersona agregarBurbuja: unaBurbuja.		self deny: (unaBurbuja estaPinchada).	self assert: (persona puedeCircular).		unaPersona agregarSintoma: 'Tos'.	unaPersona agregarSintoma: 'Fiebre'.	unaPersona agregarSintoma: 'Dolor de cabeza'.	self assert: (unaBurbuja estaPinchada).	self deny: (persona puedeCircular).! !!PersonaTest methodsFor: 'tests' stamp: 'MANU 5/17/2021 15:13'!test07EsencialDeRiesgoNoPuedeCircular	persona esEsencial.	persona esRiesgo.	self deny: (persona puedeCircular)! !!PersonaTest methodsFor: 'tests' stamp: 'manu 6/17/2021 17:06'!test02VacunadxPuedeCircular	persona esVacunadx.	self assert: ((persona getVacuna) validar ).	self assert: (persona puedeCircular)! !!PersonaTest methodsFor: 'tests' stamp: 'manu 5/20/2021 19:33'!test12AgregarUnSintomaExistenteDaError	persona agregarSintoma: 'Tos'.	self should: [ persona agregarSintoma: 'Tos' ] raise: SintomaExistenteError.! !!PersonaTest methodsFor: 'tests' stamp: 'manu 6/17/2021 17:15'!test03EsencialPuedeCircular	persona esEsencial.	self assert: ((persona getEsencial) validar ).	self assert: (persona puedeCircular)! !!PersonaTest methodsFor: 'tests' stamp: 'manu 6/17/2021 17:16'!test09UnaPersonaConSintomasNoPuedeCircular	persona esVacunadx.		persona agregarSintoma: 'Tos'.	self deny: (persona puedeCircular ).	self deny: ((persona getCovid) validar ).		persona agregarSintoma: 'Vomito'.	self deny: (persona puedeCircular ).	self deny: ((persona getCovid) validar ).		persona agregarSintoma: 'Dolor de cabeza'.	self deny: (persona puedeCircular ).	self deny: ((persona getCovid) validar ).! !!PersonaTest methodsFor: 'tests' stamp: 'manu 6/17/2021 17:15'!test04PersonaDeRiesgoNoPuedeCircular	persona esRiesgo.	self deny: ((persona getRiesgo) validar ).	self deny: (persona puedeCircular)! !!PersonaTest methodsFor: 'running' stamp: 'MANU 5/17/2021 15:04'!setUp	persona := Persona new. "Aislamiento estricto por defecto"! !